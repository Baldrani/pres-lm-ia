// Generated by CodiumAI

import { drawBillboards } from "../src/app";

describe("drawBillboards", () => {
    // Draw headers correctly at the specified position with the correct style
    it("should draw headers at the correct position with the correct style", () => {
        document.body.innerHTML = '<canvas id="gameCanvas"></canvas>';
        const canvas = document.getElementById("gameCanvas");
        canvas.width = 800;
        canvas.height = 600;
        const ctx = canvas.getContext("2d");
        global.ctx = ctx;
        global.SCREEN_WIDTH = canvas.width;
        global.scrollOffset = 0;
        global.slides = [["Header1"], ["Header2"]];
        global.visibleLines = slides.map(() => 1);
        global.fadeAmounts = slides.map(slide => slide.map(() => 0));

        drawBillboards();

        expect(ctx.fillStyle).toBe("#3ad4a7");
        expect(ctx.font).toBe("30px Arial");
        expect(ctx.fillText).toHaveBeenCalledWith("Header1", 400 - ctx.measureText("Header1").width / 2, 50);
        expect(ctx.fillText).toHaveBeenCalledWith("Header2", 1200 - ctx.measureText("Header2").width / 2, 50);
    });

    // Handle cases where slide array is empty
    it("should handle empty slide array without errors", () => {
        document.body.innerHTML = '<canvas id="gameCanvas"></canvas>';
        const canvas = document.getElementById("gameCanvas");
        canvas.width = 800;
        canvas.height = 600;
        const ctx = canvas.getContext("2d");
        global.ctx = ctx;
        global.SCREEN_WIDTH = canvas.width;
        global.scrollOffset = 0;
        global.slides = [];
        global.visibleLines = slides.map(() => 1);
        global.fadeAmounts = slides.map(slide => slide.map(() => 0));

        expect(() => drawBillboards()).not.toThrow();
    });
});
